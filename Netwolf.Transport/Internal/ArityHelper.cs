// Copyright (c) 2024 Ryan Schmidt <skizzerz@skizzerz.net>
// SPDX-License-Identifier: LGPL-3.0-or-later

using Netwolf.Transport.IRC;

namespace Netwolf.Transport.Internal;

internal static class ArityHelper
{
    /// <summary>
    /// Maximum number of parameters an IRC message is allowed to contain per spec
    /// </summary>
    private const int MAX_PARAMS = 15;

    /// <summary>
    /// Checks arity (number of arguments) of a server-to-client IRC command.
    /// Returns true for unrecognized commands.
    /// </summary>
    /// <param name="network">Network to check against (for enabled CAPs, etc.)</param>
    /// <param name="verb">Command, all uppercase</param>
    /// <param name="arity">Number of arguments</param>
    /// <returns></returns>
    internal static bool CheckArity(INetworkInfo network, string verb, int arity)
    {
        var (min, max) = verb switch
        {
            "001" => (2, 2),
            "002" => (2, 2),
            "003" => (2, 2),
            "004" => (5, 6),
            "005" => (3, MAX_PARAMS),
            "010" => (4, 4),
            "212" => (3, 5),
            "219" => (3, 3),
            "221" => (2, 2),
            "242" => (2, 2),
            "251" => (2, 2),
            "252" => (3, 3),
            "253" => (3, 3),
            "254" => (3, 3),
            "255" => (2, 2),
            "256" => (2, 3),
            "257" => (2, 2),
            "258" => (2, 2),
            "259" => (2, 2),
            "263" => (3, 3),
            "265" => (2, 4),
            "266" => (2, 4),
            "276" => (3, 3),
            "300" => (0, MAX_PARAMS),
            "301" => (3, 3),
            "302" => (2, 2),
            "305" => (2, 2),
            "306" => (2, 2),
            "307" => (3, 3),
            "311" => (6, 6),
            "312" => (4, 4),
            "313" => (3, 3),
            "314" => (6, 6),
            "315" => (3, 3),
            "317" => (5, 5),
            "318" => (3, 3),
            "319" => (3, 3),
            "320" => (3, 3),
            "321" => (2, 4),
            "322" => (4, 4),
            "323" => (2, 2),
            "324" => (3, MAX_PARAMS),
            "329" => (3, 3),
            "330" => (4, 4),
            "331" => (3, 3),
            "332" => (3, 3),
            "333" => (4, 4),
            "336" => (2, 2),
            "337" => (2, 2),
            "338" => (3, 5),
            "341" => (3, 3),
            "346" => (3, 3),
            "347" => (3, 3),
            "348" => (3, 3),
            "349" => (3, 3),
            "351" => (4, 4),
            "352" => (8, 8),
            "353" => (4, 4),
            "364" => (4, 4),
            "365" => (3, 3),
            "366" => (3, 3),
            "367" => (3, 5),
            "368" => (3, 3),
            "369" => (3, 3),
            "371" => (2, 2),
            "372" => (2, 2),
            "374" => (2, 2),
            "375" => (2, 2),
            "376" => (2, 2),
            "378" => (3, 3),
            "379" => (3, 3),
            "381" => (2, 2),
            "382" => (3, 3),
            "391" => (3, 5),
            "400" => (3, MAX_PARAMS),
            "401" => (3, 3),
            "402" => (3, 3),
            "403" => (3, 3),
            "404" => (3, 3),
            "405" => (3, 3),
            "406" => (2, 2),
            "409" => (2, 2),
            "411" => (2, 2),
            "412" => (2, 2),
            "417" => (2, 2),
            "421" => (3, 3),
            "422" => (2, 2),
            "431" => (2, 2),
            "432" => (3, 3),
            "433" => (3, 3),
            "436" => (3, 3),
            "441" => (4, 4),
            "442" => (3, 3),
            "443" => (4, 4),
            "451" => (2, 2),
            "461" => (3, 3),
            "462" => (2, 2),
            "464" => (2, 2),
            "465" => (2, 2),
            "471" => (3, 3),
            "472" => (3, 3),
            "473" => (3, 3),
            "474" => (3, 3),
            "475" => (3, 3),
            "476" => (2, 2),
            "481" => (2, 2),
            "482" => (3, 3),
            "483" => (2, 2),
            "491" => (2, 2),
            "501" => (2, 2),
            "502" => (2, 2),
            "524" => (3, 3),
            "525" => (3, 3),
            "670" => (2, 2),
            "671" => (3, 3),
            "691" => (2, 2),
            "696" => (5, 5),
            "704" => (3, 3),
            "705" => (3, 3),
            "706" => (3, 3),
            "723" => (3, 3),
            "900" => (4, 4),
            "901" => (3, 3),
            "902" => (2, 2),
            "903" => (2, 2),
            "904" => (2, 2),
            "905" => (2, 2),
            "906" => (2, 2),
            "907" => (2, 2),
            "908" => (3, 3),
            "CAP" => (3, 4),
            "ACCOUNT" => (1, 1),
            "AUTHENTICATE" => (1, 1),
            "AWAY" => (0, 1),
            "BATCH" => (1, MAX_PARAMS),
            "CHGHOST" => (2, 2),
            "ERROR" => (1, 1),
            "FAIL" => (3, MAX_PARAMS),
            "INVITE" => (2, 2),
            "JOIN" => network.TryGetEnabledCap("extended-join", out _) ? (3, 3) : (1, 1),
            "KICK" => (2, 3),
            "MARKREAD" => (2, 2),
            "MODE" => (2, MAX_PARAMS),
            "NICK" => (1, 1),
            "NOTE" => (3, MAX_PARAMS),
            "NOTICE" => (2, 2),
            "PART" => (1, 2),
            "PING" => (1, 2),
            "PONG" => (1, 2),
            "PRIVMSG" => (2, 2),
            "QUIT" => (0, 1),
            "REDACT" => (2, 3),
            "RENAME" => (3, 3),
            "SETNAME" => (1, 1),
            "TAGMSG" => (1, 1),
            "TOPIC" => (2, 2),
            "WALLOPS" => (1, 1),
            "WARN" => (3, MAX_PARAMS),
            _ => (0, MAX_PARAMS),
        };

        return arity >= min && arity <= max;
    }
}
